const TelegramBot = require('node-telegram-bot-api');
const cron = require('node-cron');

// === üîê –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ–∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ Render ===
const BOT_TOKEN = process.env.BOT_TOKEN;
const CHAT_ID = process.env.CHAT_ID;

if (!BOT_TOKEN || !CHAT_ID) {
  console.error("‚ùå –ü–æ–º–∏–ª–∫–∞: BOT_TOKEN –∞–±–æ CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω–æ —É Render Environment Variables!");
  process.exit(1);
}

// === ü§ñ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram-–±–æ—Ç–∞ ===
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

let counter = 0;

// === üì© –õ—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —ñ–∑ –∫–ª—é—á–æ–≤–∏–º —Å–ª–æ–≤–æ–º ===
bot.on('message', (msg) => {
  if (!msg.text) return;
  if (msg.text.includes('–ù–∞–¥—Ä—É–∫–æ–≤–∞–Ω–æ')) {
    counter++;
    console.log(`üì• –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –∑–∞–≥–∞–ª–æ–º: ${counter}`);
  }
});

// === üïï –ü—ñ–¥—Å—É–º–æ–∫ –¥–Ω—è —â–æ–¥–Ω—è –æ 18:00 (–∑–∞ –ö–∏—î–≤–æ–º) ===
cron.schedule('0 18 * * *', async () => {
  const message = `üì¶ –ü—ñ–¥—Å—É–º–æ–∫ –¥–Ω—è: ${counter} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—å`;
  try {
    await bot.sendMessage(CHAT_ID, message);
    console.log(`[${new Date().toLocaleTimeString()}] ‚úÖ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: ${message}`);
  } catch (err) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è:", err.message);
  }
  counter = 0;
}, {
  timezone: "Europe/Kyiv"
});

// === ‚úÖ –°—Ç–∞—Ç—É—Å –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É ===
console.log('‚úÖ Daily Summary Bot –∑–∞–ø—É—â–µ–Ω–æ —ñ —á–µ–∫–∞—î –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...');
